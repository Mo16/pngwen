{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","providerOptions","walletconnect","package","WalletConnectProvider","options","infuraId","rpc","connectFailed","updateAccount","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","StyledButton","button","StyledRoundButton","ResponsiveWrapper","StyledLogo","img","StyledLink","App","input","len","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","CONFIG","SET_CONFIG","getData","getConfig","fetch","headers","Accept","configResponse","json","config","useEffect","style","padding","backgroundColor","alt","src","borderRadius","fontSize","marginTop","textAlign","fontWeight","color","Number","target","href","onClick","e","preventDefault","abiResponse","abi","localStorage","removeItem","web3Modal","Web3Modal","network","cacheProvider","connect","provider","Web3","Web3EthContract","setProvider","eth","getAccounts","accounts","request","method","networkId","SmartContractObj","on","window","location","reload","message","includes","String","lineHeight","disabled","newMintAmount","decrementMintAmount","incrementMintAmount","gasLimit","totalCostWei","totalGasLimit","mint","send","to","from","value","once","err","then","receipt","claimNFTs","length","substring","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c937c65f.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      // let cost = await store\n      //   .getState()\n      //   .blockchain.smartContract.methods.cost()\n      //   .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          // cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\n\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst INFURA_ID = \"\";\n\nconst providerOptions = {\n  walletconnect: {\n    package: WalletConnectProvider, // required\n    options: {\n      infuraId: INFURA_ID, // required\n      rpc: {\n        56: \"https://bsc-dataseed.binance.org/\", \n      },\n    },\n  },\n\n};\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    try {\n      const abiResponse = await fetch(\"/config/abi.json\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      });\n      const abi = await abiResponse.json();\n      const configResponse = await fetch(\"/config/config.json\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      });\n      const CONFIG = await configResponse.json();\n      localStorage.removeItem(\"walletconnect\");\n      localStorage.removeItem(\"WALLETCONNECT_DEEPLINK_CHOICE\");\n      const web3Modal = new Web3Modal({\n        network: \"mainnet\", // optional\n        cacheProvider: false, // optional\n        providerOptions, // required\n      });\n      const provider = await web3Modal.connect();\n      const web3 = new Web3(provider);\n      console.log(\"web\", web3);\n\n      Web3EthContract.setProvider(provider);\n      const accounts = await web3.eth.getAccounts();\n      const networkId = await provider.request({\n        method: \"net_version\",\n      });\n      console.log(\"networkId\", networkId);\n      if (networkId == CONFIG.NETWORK.ID) {\n        const SmartContractObj = new Web3EthContract(\n          abi,\n          CONFIG.CONTRACT_ADDRESS\n        );\n        dispatch(\n          connectSuccess({\n            account: accounts[0],\n            smartContract: SmartContractObj,\n            web3: web3,\n          })\n        );\n        // Add listeners start\n        provider.on(\"accountsChanged\", (accounts) => {\n          dispatch(updateAccount(accounts[0]));\n        });\n        provider.on(\"chainChanged\", () => {\n          window.location.reload();\n        });\n        // Add listeners end\n      } else {\n        dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n      }\n    } catch (err) {\n      console.log(\"error\", err, \" message\", err.message);\n      if (\n        typeof err !== \"undefined\" &&\n        typeof err.message !== \"undefined\" &&\n        err.message.includes(\"User Rejected\")\n      ) {\n        dispatch(connectFailed(\"User rejected the request\"));\n      } else if (\n        (typeof err === \"string\" || err instanceof String) &&\n        err.includes(\"Modal closed by user\")\n      ) {\n        dispatch(connectFailed(\"Modal closed by user\"));\n      } else {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--primary);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect, disconnectWallet } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\n\nimport styled from \"styled-components\";\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...${input.substring(39)}` : input;\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  background-color: var(--secondary);\n  padding: 10px;\n  font-weight: bold;\n  color: var(--secondary-text);\n  width: 100px;\n  cursor: pointer;\n\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: var(--primary);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--primary-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  width: 50%;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 200px;\n  @media (min-width: 767px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledImg = styled.img`\n\n\n  background-color: var(--accent);\n  border-radius: 100%;\n  width: 200px;\n  @media (min-width: 900px) {\n    width: 250px;\n  }\n  @media (min-width: 1000px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n\n  const claimNFTs = () => {\n    let cost = CONFIG.WEI_COST;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .mint(mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `WOW, the ${CONFIG.NFT_NAME} is yours! `\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > 20) {\n      newMintAmount = 20;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n    <s.Screen>\n      <s.Container\n        flex={1}\n        ai={\"center\"}\n        style={{ padding: 24, backgroundColor: \"var(--primary)\" }}\n        image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg.jpg\" : null}\n      >\n        {/* <s.TextTitle style={{\n          color: \"red\",\n          paddingTop: 30\n        }}>\n          Welcome to Puli Inu\n        </s.TextTitle> */}\n\n\n        <StyledLogo style={{\n\n\n        }} alt={\"logo\"} src={\"/config/images/textlogo.png\"} />\n\n\n        <s.SpacerSmall />\n        <ResponsiveWrapper flex={1} style={{ padding: 24 }} test>\n\n          <s.SpacerLarge />\n\n          <s.Container\n            flex={2}\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{\n              backgroundColor: 'rgba(52, 52, 52, 0.9)',\n              padding: 24,\n              borderRadius: 24,\n\n            }}\n          >       \n          \n           <s.TextTitle style={{\n            fontSize: 70,\n            marginTop: -45,\n            textAlign: \"center\"\n          }}>\n            PNGWEN\n          </s.TextTitle>\n\n            <s.SpacerSmall />\n\n\n              \n\n\n            <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 50,\n                fontWeight: \"bold\",\n                color: \"var(--accent-text)\",\n                marginTop: -10,\n              }}\n            >\n              {data.totalSupply} / {CONFIG.MAX_SUPPLY}\n            </s.TextTitle>\n            <s.TextDescription\n              style={{\n                textAlign: \"center\",\n                color: \"var(--primary-text)\",\n\n              }}\n            >\n              {/* <StyledLink style={{\n                color: \"white\"\n              }} target={\"_blank\"} href={CONFIG.SCAN_LINK}>\n                Contract Address <br></br>\n                {truncate(CONFIG.CONTRACT_ADDRESS, 24)} \n\n              </StyledLink> */}\n            </s.TextDescription>\n            <s.SpacerSmall />\n            {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  The sale has ended.\n                </s.TextTitle>\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  You can still find {CONFIG.NFT_NAME} on\n                </s.TextDescription>\n                <s.SpacerSmall />\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                  {CONFIG.MARKETPLACE}\n                </StyledLink>\n              </>\n            ) : (\n              <>\n\n                <s.SpacerXSmall />\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  Excluding gas fees.\n                </s.TextDescription>\n                <s.SpacerSmall />\n                {blockchain.account === \"\" ||\n                blockchain.smartContract === null ? (\n                  <s.Container ai={\"center\"} jc={\"center\"}>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      Connect to the {CONFIG.NETWORK.NAME} network\n                    </s.TextDescription>\n                    <s.SpacerSmall />\n                    <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connect());\n                        getData();\n                      }}\n                    >\n                      CONNECT\n                    </StyledButton>\n\n \n                    {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--accent-text)\",\n                          }}\n                        >\n                          {blockchain.errorMsg}\n                        </s.TextDescription>\n                      </>\n                    ) : null}\n                  </s.Container>\n                  \n                ) : (\n                  <>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      {feedback}\n                    </s.TextDescription>\n                    <s.SpacerMedium />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledRoundButton\n                        style={{ lineHeight: 0.4 }}\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          decrementMintAmount();\n                        }}\n                      >\n                        -\n                      </StyledRoundButton>\n                      <s.SpacerMedium />\n                      <s.TextDescription\n                        style={{\n                          textAlign: \"center\",\n                          color: \"var(--accent-text)\",\n                        }}\n                      >\n                        {mintAmount}\n                      </s.TextDescription>\n                      <s.SpacerMedium />\n                      <StyledRoundButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          incrementMintAmount();\n                        }}\n                      >\n                        +\n                      </StyledRoundButton>\n                    </s.Container>\n                    <s.SpacerSmall />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          claimNFTs();\n                          getData();\n                        }}\n                      >\n                        {truncate(blockchain.account, 3)} \n                        {claimingNft ? \"  BUSY\" : \"  MINT NOW\"}\n                      </StyledButton>\n\n                    </s.Container>\n                    \n                  </>\n                  \n                \n                )}\n                \n                <br></br>\n                {/* <s.TextTitle\n                  style={{ textAlign: \"center\" , color: \"var(--accent-text)\", background: \"red\" ,  borderRadius: 25, padding: 20}}\n                >\n\n                Minting table:\n                <br></br>\n                &nbsp;&nbsp;&nbsp;0-500: 0.1 BNB &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| 501-1000: 0.2 BNB \n                <br></br>\n                1001-1250: 0.25 BNB&nbsp;|  1251-1500: 0.3 BNB\n                <br></br>\n                1501-1750: 0.35 BNB&nbsp;&nbsp;| 1751-2000: 0.4 BNB \n                <br></br>\n                2001-2250: 0.45 BNB&nbsp;| 2251-2500: 0.5 BNB\n                <br></br>\n\n                  1 {CONFIG.SYMBOL} costs {\n                  CONFIG.DISPLAY_COST\n                  }{\" \"}\n                  {CONFIG.NETWORK.SYMBOL}.\n                </s.TextTitle> */}\n              </>\n            )}\n            <s.SpacerMedium />\n          </s.Container>\n          <s.SpacerLarge />\n\n        </ResponsiveWrapper>\n        <s.SpacerMedium />\n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\n{/* \n           <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--accent-text)\",\n            }}\n          >\n            {blockchain.account}\n          </s.TextDescription> */}\n\n          {/*\n          <s.SpacerSmall />\n          <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n            }}\n          >\n            We have set the gas limit to {CONFIG.GAS_LIMIT} for the contract to\n            successfully mint your NFT. We recommend that you don't lower the\n            gas limit.\n          </s.TextDescription> */}\n\n        </s.Container>\n      </s.Container>\n    </s.Screen>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}